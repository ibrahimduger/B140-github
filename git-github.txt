--local'imizde repo oluşturabilmek için ve git-github kullanımı
1-Çalışacağımız klasörü seçip yada yeni bir klasör oluşturup, klasörün yolunu gösteren bölüme cmd yazıp
enter yapıp açmış olduğumuz klasörün yolunda terminalimizi açmış oluruz
2-Ve bu dizinde açılan terminale 'git init' yazarız, initilaze empty git repository yazısını gördüğümüzde bu çalışma alanımızda boş bir repository oluşturmuş oluruz 
3-Git init yaptıktan sonraki çalışma alanımızın ismine Working space denir.
4-'git add .' komutuyla working space teki kodlarımızı Staging area dediğimiz bekleme alanına taşırız
5-'git commit -m"versiyon adı"' kodunu yazarak stage'deki kodlarımızdan versiyon oluşturmuş oluruz.
6-working space ve stage de kodlarımızın durumunu görmek için 'git status' kodunu kullanırız
7-commit store (versiyon oluşturduğumuz yer) daki versiyonlarımızı görmek için de 'git log --oneline' komutunu kullanırız.
8-Oluşturmuş olduğumuz versiyonu github'a gönderebilmek için git push <github repository adresi> yada devamlı kullanıcağımız bir repoysa git remote add origin <repo adresi>/git push -u master komutuyla github'a gönderebiliriz
9-Github'a gönderdiğimiz kodlarıda başka bir çalışma ortamına çekebilmek için git pull <github repo adresi> yazarak çekebiliriz
10-Localimizde ilişkendirdiğimiz adresi git remote -v komutuyla görebiliriz.
11-Github tarafında yaptığımız bir değişlik olursa adresi bir kerelik tanımladığımız için sadece git pull yapmamız yeterlidir.
Aynı şekilde adresi tanımladığımız için sadece git push komutu ilede kodlarımızı gönderebiliriz

---2.DERS----Restore/Branch/Stash komutları
1-Working Space ve Staging Area daki yapmış olduğumuz değişiklikleri geri alabiliriz.Working Space de yaptığımız bir güncellemeyi geri almak için "git restore ." komutu ile yapılan değişiklikleri geri alabiliriz. Eğer Stageden geri almak istersek "git restore --staged ." komutuyla Working Space e alırız
2-Yazdıklarımızı WS ve SA dan kaldırmak istersek "git reset --hard" komutunu kullanırız